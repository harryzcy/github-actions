name: Go Tests

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Working directory"
        required: false
        type: string
        default: .
      latest:
        description: "Number of latest Go versions"
        required: false
        type: number
        default: 2
      harden-runner:
        description: "Harden runner"
        required: false
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  set-matrix:
    runs-on: ubuntu-24.04
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
      - name: Determine Go versions
        id: go-version
        run: |
          if [ "${{ inputs.latest }}" == "1" ]; then
            echo "go-version=[\"1.23\"]" >> "$GITHUB_OUTPUT"
          else
            echo "go-version=[\"1.22\", \"1.23\"]" >> "$GITHUB_OUTPUT"
          fi

  unit-test:
    needs: set-matrix
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, macos-14, macos-15]
        go-version: ${{ fromJSON(needs.set-matrix.outputs.go-version) }}
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
    steps:
      - uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        if: ${{ inputs.harden-runner }}
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache-dependency-path: ${{ inputs.working-directory }}/go.sum

      - name: Build
        working-directory: ${{ inputs.working-directory }}
        run: go build -v ./...

      - name: Test with coverage
        working-directory: ${{ inputs.working-directory }}
        run: |
          # shellcheck disable=SC2046
          go test $(go list ./... | grep -v /integration) -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@7f8b4b4bde536c465e797be725718b88c5d95e0e # v5.1.1
        with:
          working-directory: ${{ inputs.working-directory }}
          file: ./coverage.txt
          use_oidc: true
