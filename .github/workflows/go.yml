name: Go Tests

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Working directory"
        required: false
        type: string
        default: .
      latest:
        description: "Number of latest Go versions"
        required: false
        type: number
        default: 2
      harden-runner:
        description: "Harden runner"
        required: false
        type: boolean
        default: true

permissions:
  contents: read

jobs:
  set-matrix:
    name: Set Go Version Matrix
    runs-on: ubuntu-24.04
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
      - name: Determine Go versions
        id: go-version
        run: |
          latest_version="$(curl -s 'https://go.dev/VERSION?m=text' | head -n 1 | grep -oP 'go[0-9]+\.[0-9]+' | sed 's/go//')"
          major=$(echo "$latest_version" | cut -d. -f1)
          minor=$(echo "$latest_version" | cut -d. -f2)
          if [ "${{ inputs.latest }}" == "1" ]; then
            echo "go-version=[\"${major}.${minor}\"]" >> "$GITHUB_OUTPUT"
          else
            echo "go-version=[\"${major}.$((minor - 1))\", \"${major}.${minor}\"]" >> "$GITHUB_OUTPUT"
          fi

  unit-test:
    name: Unit Tests
    needs: set-matrix
    strategy:
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - macos-14
          - macos-15
        go-version: ${{ fromJSON(needs.set-matrix.outputs.go-version) }}
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        if: ${{ inputs.harden-runner }}
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache-dependency-path: ${{ inputs.working-directory }}/go.sum

      - name: Build
        working-directory: ${{ inputs.working-directory }}
        run: go build -v ./...

      - name: Test with coverage
        working-directory: ${{ inputs.working-directory }}
        run: |
          # shellcheck disable=SC2046
          go test $(go list ./... | grep -v /integration) -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          working-directory: ${{ inputs.working-directory }}
          files: ./coverage.txt
          use_oidc: true
