name: Go Tests

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Working directory"
        required: false
        type: string
        default: .
      latest:
        description: "Number of latest Go versions"
        required: false
        type: number
        default: 2

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
      - id: go-version
        run: |
          if [ "${{ github.event.inputs.latest }}" == "1" ]; then
            echo "go-version=[\"1.21\"]" >> $GITHUB_OUTPUT
          else
            echo "go-version=[\"1.20\", \"1.21\"]" >> $GITHUB_OUTPUT
          fi

  unit-test:
    needs: set-matrix
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ${{ fromJSON(needs.set-matrix.outputs.go-version) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build
        working-directory: ${{ inputs.working-directory }}
        run: go build -v ./...

      - name: Test with coverage
        working-directory: ${{ inputs.working-directory }}
        run: go test $(go list ./... | grep -v /integration) -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          working-directory: ${{ inputs.working-directory }}
          file: ./coverage.txt
